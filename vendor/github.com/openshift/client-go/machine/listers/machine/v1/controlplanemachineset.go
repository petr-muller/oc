// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/machine/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ControlPlaneMachineSetLister helps list ControlPlaneMachineSets.
// All objects returned here must be treated as read-only.
type ControlPlaneMachineSetLister interface {
	// List lists all ControlPlaneMachineSets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ControlPlaneMachineSet, err error)
	// ControlPlaneMachineSets returns an object that can list and get ControlPlaneMachineSets.
	ControlPlaneMachineSets(namespace string) ControlPlaneMachineSetNamespaceLister
	ControlPlaneMachineSetListerExpansion
}

// controlPlaneMachineSetLister implements the ControlPlaneMachineSetLister interface.
type controlPlaneMachineSetLister struct {
	indexer cache.Indexer
}

// NewControlPlaneMachineSetLister returns a new ControlPlaneMachineSetLister.
func NewControlPlaneMachineSetLister(indexer cache.Indexer) ControlPlaneMachineSetLister {
	return &controlPlaneMachineSetLister{indexer: indexer}
}

// List lists all ControlPlaneMachineSets in the indexer.
func (s *controlPlaneMachineSetLister) List(selector labels.Selector) (ret []*v1.ControlPlaneMachineSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ControlPlaneMachineSet))
	})
	return ret, err
}

// ControlPlaneMachineSets returns an object that can list and get ControlPlaneMachineSets.
func (s *controlPlaneMachineSetLister) ControlPlaneMachineSets(namespace string) ControlPlaneMachineSetNamespaceLister {
	return controlPlaneMachineSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ControlPlaneMachineSetNamespaceLister helps list and get ControlPlaneMachineSets.
// All objects returned here must be treated as read-only.
type ControlPlaneMachineSetNamespaceLister interface {
	// List lists all ControlPlaneMachineSets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ControlPlaneMachineSet, err error)
	// Get retrieves the ControlPlaneMachineSet from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ControlPlaneMachineSet, error)
	ControlPlaneMachineSetNamespaceListerExpansion
}

// controlPlaneMachineSetNamespaceLister implements the ControlPlaneMachineSetNamespaceLister
// interface.
type controlPlaneMachineSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ControlPlaneMachineSets in the indexer for a given namespace.
func (s controlPlaneMachineSetNamespaceLister) List(selector labels.Selector) (ret []*v1.ControlPlaneMachineSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ControlPlaneMachineSet))
	})
	return ret, err
}

// Get retrieves the ControlPlaneMachineSet from the indexer for a given namespace and name.
func (s controlPlaneMachineSetNamespaceLister) Get(name string) (*v1.ControlPlaneMachineSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("controlplanemachineset"), name)
	}
	return obj.(*v1.ControlPlaneMachineSet), nil
}
